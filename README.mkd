r10k
====

Puppet environment and module deployment

[![Build Status](https://travis-ci.org/adrienthebo/r10k.png?branch=master)](https://travis-ci.org/adrienthebo/r10k)

Description
-----------

[librarian-puppet]: https://github.com/rodjek/librarian-puppet
[workflow]: http://puppetlabs.com/blog/git-workflow-and-puppet-environments/

r10k provides a general purpose toolset for deploying Puppet environments and
modules. It implements the [Puppetfile][librarian-puppet] format and provides a native
implementation of Puppet [dynamic environments][workflow].

Requirements
------------

r10k supports the following Ruby versions:

  - 1.8.7 (POSIX minimum version)
  - 1.9.3 (Windows minimum version)
  - 2.0.0
  - 2.1.0

r10k requires additional components, depending on how you plan on managing
environments and modules.

  - Installing modules from the Puppet Forge requires Puppet 3.0.0+ or later.
  Puppet 2.7 may work, but is generally not recommended as Puppet 2.7 is EOL.
  - Git is required for creating environments and modules from Git
  - SVN is required for creating environments and modules from SVN

Installation
------------

### Rubygems

For general use, you should install r10k from Ruby gems:

    gem install r10k
    r10k help

### Puppet Enterprise

Puppet Enterprise bundles a copy of Ruby, so if you do not want to use the
system version of Ruby with r10k, you need to use the bundled PE gem command for
installation:

    /opt/puppet/bin/gem install r10k
    r10k help

### Bundler

If you have more specific needs or plan on modifying r10k you can run it out of
a git repository using Bundler for dependencies:

    git clone git://github.com/adrienthebo/r10k
    cd r10k
    bundle install
    bundle exec r10k help

Common Commands
---------------

The following commands must be run either by root or via sudo unless non-root user configuration has been performed. See [usage](doc/dynamic-environments/usage.mkd) for detailed information on enabling non-root users to run r10k.

### Deploy all environments and Puppetfile specified modules

    r10k deploy environment -p

### Deploy all environments but don't update/install modules

    r10k deploy environment

### Deploy a specific environment, and its Puppetfile specified modules

    r10k deploy environment your_env -p

### Deploy a specific environment, but not its modules

    r10k deploy environment your_env

### Display all environments being managed by r10k

    r10k deploy display

### Display all environments being managed by r10k, and their modules.

    r10k deploy display -p

Usage
-----

r10k has two primary roles: installing Puppet modules using a standalone
Puppetfile, and managing Git and SVN based dynamic environments. For more
information see the topic specific documentation:

  * Puppetfile documentation: [doc/puppetfile.mkd](doc/puppetfile.mkd)
  * Environment deployment documentation: [doc/dynamic-environments.mkd](doc/dynamic-environments.mkd)

Basic Environment Structure
---------------------------

r10k supports Dynamic Environments (see below), but simple environment structures
are also supported.

The basic structure of an environment that uses a Puppetfile to install modules is

    .
    |-- manifests
      |-- site.pp
    |-- Puppetfile
    |-- .gitignore

site.pp would contain your node definitions, and the Puppetfile would specify the modules
to be installed.  r10k automatically creates the 'modules' directory when it applies the
Puppetfile.

It's important to put the modules directory in .gitignore so that git doesn't accidentally
put it into the repo.

    modules/

Dynamic environment support
---------------------------

r10k implements the dynamic environment workflow. Given a git repository with
multiple branches r10k can create an environment for each branch. This means
that you can use git with the normal branch-develop-merge workflow, and easily
test your changes as you work.

Deployment commands are implemented under the `r10k deploy` subcommand.

### Git repository layout

[modulepath]: http://docs.puppetlabs.com/references/stable/configuration.html#modulepath

r10k makes the assumption that Puppet modules are stored in subdirectories of
the Git repository. These directories are all loaded into the Puppet master with
the [modulepath][modulepath] directive.

For example, your Git repository would have a structure something like this:

    .
    ├── Puppetfile   # An optional Puppetfile
    ├── dist         # Internally developed generic modules
    └── site         # Modules for deploying custom services

### Using dynamic environments with a Puppetfile

r10k can implement a hybrid workflow with dynamic environments and Puppetfiles.
If a Puppetfile is available at the root of a deployed environment, r10k can
create and manage the `modules` directory within your Git repository.

It's recommended that you add `/modules` to your project .gitignore.

A deployed environment with a Puppetfile will look something like this:

    .
    ├── Puppetfile   # An optional Puppetfile
    ├── dist         # Internally developed generic modules
    ├── modules      # Puppet modules deployed by r10k
    └── site         # Modules for deploying custom services

Getting help
------------

  * IRC: r10k has a dedicated channel, `#r10k`, on Freenode where r10k questions
  can be directed. Questions about r10k can frequently be asked in `#puppet` as well.
  * Mailing lists: [puppet-users](https://groups.google.com/forum/#!forum/puppet-users)
  * Q&A: [Puppet Ask](https://ask.puppetlabs.com/questions/)


More information
----------------

The original impetus for r10k is explained at http://somethingsinistral.net/blog/rethinking-puppet-deployment/

Contributors
------------

Please see the CHANGELOG for a listing of the (very awesome) contributors.
